<div class="container">
  <div class="gigDetails">
    <h2><%= @gig.artist %> </h2>
    <h3>at <%= @gig.venue %></h3>
    <h4>on <%= @gig.date %></h4>
    <h4><%= @gig.city %></h4>
  </div>



<h3>gigmem users that also attended this gig</h3>
<!-- loop through and display users that match current gig. Also push details to empty array markers, so I can loop through and create markers on the map -->

<% @markers = [] %>
<div class="row gigShowPage">
    <% @all_gigs.order(@distance_between).reverse.each do |gig| %>
        <% if @gig.artist == gig.artist && @gig.venue == gig.venue && @gig.date == gig.date && gig.user.username != @current_user.username%>
        <div class="col s12 m4 gig">
        <p><%= gig.user.username %></p>
        <% if gig.user.image %>
        <div class="circle"><%= image_tag gig.user.image %></div>
        <% end %>
        <p><%= link_to("See profile", "/users/#{gig.user.id}")%></p>
        <p><%= link_to(user_chatrooms_path(@current_user, :other_user => gig.user.id), method: :post) do %>
                Message me
                <% end %></p>
        <!-- Geocoder - distance between current user and other users that attended -->
        <% distance_between = Geocoder::Calculations.distance_between([gig.user.latitude,gig.user.longitude], [@current_user.latitude, @current_user.longitude]) %>
        <% @distance_between = distance_between * 1.6 %>
        <% @distance_between = @distance_between.round %>
        <p>Distance from you: <%= @distance_between%> kms</p>
        <% @markers.push([gig.user.latitude, gig.user.longitude, gig.user.first_name, gig.user.image, @distance_between, link_to(user_chatrooms_path(@current_user, :other_user => gig.user.id), method: :post)]) %>
    </div>
        <% end %>
    <% end %>
</div>



<div id="map"></div>
</div>
<style>
    #map {
        width: 80%;
        height: 400px;
        background-color: grey;
    }
</style>

<script>
    function initMap() {
        var userPos = {
            lat: <%= @current_user.latitude %>,
            lng: <%= @current_user.longitude %>
        };
        // Using markers array from above, saved this to variable
        var locs = <%= @markers.to_json.html_safe %>
        // Create map, rendering to the div with id of map, use userPos as the center
        var myOptions = {
            center: new google.maps.LatLng(userPos),
            zoom: 2,
            styles: [
  {
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#1d2c4d"
      }
    ]
  },
  {
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#8ec3b9"
      }
    ]
  },
  {
    "elementType": "labels.text.stroke",
    "stylers": [
      {
        "color": "#1a3646"
      }
    ]
  },
  {
    "featureType": "administrative.country",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#4b6878"
      }
    ]
  },
  {
    "featureType": "administrative.land_parcel",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#64779e"
      }
    ]
  },
  {
    "featureType": "administrative.province",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#4b6878"
      }
    ]
  },
  {
    "featureType": "landscape.man_made",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#334e87"
      }
    ]
  },
  {
    "featureType": "landscape.natural",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#023e58"
      }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#283d6a"
      }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#6f9ba5"
      }
    ]
  },
  {
    "featureType": "poi",
    "elementType": "labels.text.stroke",
    "stylers": [
      {
        "color": "#1d2c4d"
      }
    ]
  },
  {
    "featureType": "poi.park",
    "elementType": "geometry.fill",
    "stylers": [
      {
        "color": "#023e58"
      }
    ]
  },
  {
    "featureType": "poi.park",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#3C7680"
      }
    ]
  },
  {
    "featureType": "road",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#304a7d"
      }
    ]
  },
  {
    "featureType": "road",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#98a5be"
      }
    ]
  },
  {
    "featureType": "road",
    "elementType": "labels.text.stroke",
    "stylers": [
      {
        "color": "#1d2c4d"
      }
    ]
  },
  {
    "featureType": "road.highway",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#2c6675"
      }
    ]
  },
  {
    "featureType": "road.highway",
    "elementType": "geometry.stroke",
    "stylers": [
      {
        "color": "#255763"
      }
    ]
  },
  {
    "featureType": "road.highway",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#b0d5ce"
      }
    ]
  },
  {
    "featureType": "road.highway",
    "elementType": "labels.text.stroke",
    "stylers": [
      {
        "color": "#023e58"
      }
    ]
  },
  {
    "featureType": "transit",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#98a5be"
      }
    ]
  },
  {
    "featureType": "transit",
    "elementType": "labels.text.stroke",
    "stylers": [
      {
        "color": "#1d2c4d"
      }
    ]
  },
  {
    "featureType": "transit.line",
    "elementType": "geometry.fill",
    "stylers": [
      {
        "color": "#283d6a"
      }
    ]
  },
  {
    "featureType": "transit.station",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#3a4762"
      }
    ]
  },
  {
    "featureType": "water",
    "elementType": "geometry",
    "stylers": [
      {
        "color": "#0e1626"
      }
    ]
  },
  {
    "featureType": "water",
    "elementType": "labels.text.fill",
    "stylers": [
      {
        "color": "#4e6d70"
      }
    ]
  }
],
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.querySelector("#map"), myOptions);
        setMarkers(map,locs)
        }

        function setMarkers(map, locs){
            var marker, i;
            for(i = 0; i < locs.length; i++){
                var lat = locs[i][0]
                var long = locs[i][1]
                var user = locs[i][2]
                var image = locs[i][3]
                var distance = locs[i][4]
                var message = locs[i][5]

            latlngset = new google.maps.LatLng(lat, long);

            var marker = new google.maps.Marker({
             map: map, title: user , position: latlngset
                });
            // map.setCenter(marker.getPosition())

            var content = '<div class=' + "marker" + '>' + '<h5>' + user +  '</h5>' + '<p>' + '<img src=' + '"' + image + '"' + '>' + '<p>' + user + ' is ' + distance + " kms from you" + '</p>' + '</div>'
            var infowindow = new google.maps.InfoWindow()

            google.maps.event.addListener(marker,'mouseover', (function(marker,content,infowindow){
            return function() {
               infowindow.setContent(content);
               infowindow.open(map,marker);
                };
            })(marker,content,infowindow));
            }
        };

</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBbIJZ9EErSr9JKgU1aHTgjCCY_m-v78wE&callback=initMap"></script>
