<h1><%= @gig.artist %></h1>

<ul>
    <li>Venue:
        <%= @gig.venue %></li>
    <li>City:
        <%= @gig.city %></li>
    <li>Date:
        <%= @gig.date %></li>
</ul>

<div class="controls">
    <%= link_to("Delete Gig from my list", "/gigs/#{@gig.id}", method: :delete, data: { confirm: "Are you sure?" }) %>
</div>

<h3>Setlist for this gig</h3>
<div class="setlist">
    <%= form_tag(gig_path, method: "get", id: "search-form") do %>
    <% text_field_tag :artist, params[:artist], :value => @gig.artist%>
    <% text_field_tag :venue, params[:venue], :value => @gig.venue%>
    <% text_field_tag :date, params[:date], :value => @gig.date%>
    <%= submit_tag "Get setlist", :name => nil, :class => "btn"  %>
    <% end %>
</div>

<% if @setlist %>
<ul>
<% @setlist["setlists"]["setlist"]["sets"]["set"][0]["song"].each do |song| %>
    <li><%= song["@name"] %></li>
<% end %>
</ul>
<% end %>

<!-- create page to make an ajax request -->

<h3>The below GigMem users also attended this gig.</h3>

<% @markers = [] %>
<ul>
    <% @all_gigs.each do |gig| %>
        <% if @gig.artist == gig.artist && @gig.venue == gig.venue && @gig.date == gig.date && gig.user.username != @current_user.username%>
            <li><%= link_to(gig.user.username, "/users/#{gig.user.id}")%></li>
            <button class="btn waves-effect waves-light z-depth-0" type="button">
            <%= link_to("Let's chat", chatrooms_path) %></button>
            <!-- Geocoder - distance between current user and other users that attended -->
            <% distance_between = Geocoder::Calculations.distance_between([gig.user.latitude,gig.user.longitude], [@current_user.latitude, @current_user.longitude]) %>
            <li>Distance from you: <%= distance_between.round(2) %> kms</li>
            <% distance_between = distance_between * 1.6 %>
            <% @markers.push([gig.user.latitude, gig.user.longitude]) %>
        <% end %>
    <% end %>
</ul>

<div id="map"></div>
<style>
    #map {
        width: 80%;
        height: 400px;
        background-color: grey;
    }
</style>

<script>
    function initMap() {
        var userPos = {
            lat: <%= @current_user.latitude %>,
            lng: <%= @current_user.longitude %>
        };
        // Using markers array from above, saved this to variable
        var locs = <%= @markers.to_json.html_safe %>
        // Create map, rendering to the div with id of map, use userPos as the center
        var map = new google.maps.Map(document.querySelector("#map"), {
            zoom: 2,
            center: userPos
        });
        var marker = new google.maps.Marker({position: userPos, map: map});
        for (i = 0; i < locs.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locs[i][0], locs[i][1]),
                map: map
            })
        }
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBbIJZ9EErSr9JKgU1aHTgjCCY_m-v78wE&callback=initMap"></script>
